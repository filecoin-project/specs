import actors "github.com/filecoin-project/specs/actors"
import addr "github.com/filecoin-project/specs/systems/filecoin_vm/actor/address"
import block "github.com/filecoin-project/specs/systems/filecoin_blockchain/struct/block"
import deal "github.com/filecoin-project/specs/systems/filecoin_markets/storage_market/storage_deal"
import sector "github.com/filecoin-project/specs/systems/filecoin_mining/sector"

type BalanceTableHAMT {addr.Address: actors.TokenAmount}

type DealIDSetHAMT {deal.DealID: bool}
type IntToDealIDHAMT {Int: deal.DealID}

type DealIDQueue struct {
    Values      IntToDealIDHAMT
    StartIndex  Int
    EndIndex    Int

    Enqueue(dealID deal.DealID)
    Dequeue() (dealID deal.DealID, ok bool)
}

type MinerSetHAMT {addr.Address: bool}

type ActorIDSetHAMT {addr.ActorID: bool}

type MinerEvent struct {
    MinerAddr  addr.Address
    Sectors    [sector.SectorNumber]  // Empty for global events, such as SurprisePoSt expiration.
}

type MinerEventSetHAMT {MinerEvent: bool}

type SectorStorageWeightDesc struct {
    SectorSize  sector.SectorSize
    Duration    block.ChainEpoch
    DealWeight  BigInt
}

type SectorTerminationType enum {
    NormalExpiration
    UserTermination

    // Note: Detected fault termination (due to exceeding the limit of consecutive
    // SurprisePoSt failures) is not listed here, since this does not terminate all
    // sectors individually, but rather the miner as a whole.
}
