import vmr "github.com/filecoin-project/specs/systems/filecoin_vm/runtime"
import actors "github.com/filecoin-project/specs/actors"
import addr "github.com/filecoin-project/specs/systems/filecoin_vm/actor/address"
import block "github.com/filecoin-project/specs/systems/filecoin_blockchain/struct/block"

type VestingFunction enum {
    None
    Linear
    // TODO: potential options
    // PieceWise
    // Quadratic
    // Exponential
}

type Reward struct {
    VestingFunction
    StartEpoch       block.ChainEpoch
    EndEpoch         block.ChainEpoch
    Value            actors.TokenAmount
    AmountWithdrawn  actors.TokenAmount

    AmountVested(elapsedEpoch block.ChainEpoch) actors.TokenAmount
}

// ownerAddr to a collection of Reward
type RewardBalanceAMT {addr.Address: [Reward]}

type RewardActorState struct {
    RewardMap RewardBalanceAMT

    _withdrawReward(rt vmr.Runtime, ownerAddr addr.Address) actors.TokenAmount
}

type RewardActorCode struct {
    Constructor(rt vmr.Runtime)

    // Allocates a block reward to the owner of a miner, less
    // - penalty, which is burnt
    // - any amount of pledge collateral shortfall, which is transferred to storage power actor
    AwardBlockReward(rt vmr.Runtime, miner addr.Address, penalty actors.TokenAmount)

    // withdraw available funds from RewardMap
    WithdrawReward(rt vmr.Runtime)
}
