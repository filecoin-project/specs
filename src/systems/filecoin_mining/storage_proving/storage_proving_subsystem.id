import sector "github.com/filecoin-project/specs/systems/filecoin_mining/sector"
import poster "github.com/filecoin-project/specs/systems/filecoin_mining/storage_proving/poster"
import sealer "github.com/filecoin-project/specs/systems/filecoin_mining/storage_proving/sealer"
import block "github.com/filecoin-project/specs/systems/filecoin_blockchain/struct/block"

type StorageProvingSubsystem struct {
    SectorSealer   sealer.SectorSealer
    PoStGenerator  poster.PoStGenerator

    VerifySeal(sv sector.SealVerifyInfo, pieceInfos [sector.PieceInfo]) union {ok bool, err error}
    ComputeUnsealedSectorCID(sectorSize UInt, pieceInfos [sector.PieceInfo]) union {unsealedSectorCID sector.UnsealedSectorCID, err error}

    ValidateBlock(block block.Block)

    // TODO: remove this?
    // GetPieceInclusionProof(pieceRef CID) union { PieceInclusionProofs, error }

    GenerateElectionPoStCandidates(
        challengeSeed  sector.PoStRandomness
        sectorIDs      [sector.SectorID]
    ) [sector.PoStCandidate]

    GenerateSurprisePoStCandidates(
        challengeSeed  sector.PoStRandomness
        sectorIDs      [sector.SectorID]
    ) [sector.PoStCandidate]

    CreateElectionPoStProof(
        challengeSeed  sector.PoStRandomness
        candidates     [sector.PoStCandidate]
    ) sector.PoStProof

    CreateSurprisePoStProof(
        challengeSeed  sector.PoStRandomness
        candidates     [sector.PoStCandidate]
    ) sector.PoStProof

    VerifyPoStProof(
        challengeSeed  sector.PoStRandomness
        proof          [sector.PoStProof]
    ) bool
}
