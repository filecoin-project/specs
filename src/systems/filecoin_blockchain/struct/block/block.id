import ipld "github.com/filecoin-project/specs/libraries/ipld"
import filcrypto "github.com/filecoin-project/specs/algorithms/crypto"

import st "github.com/filecoin-project/specs/systems/filecoin_vm/state_tree"
import clock "github.com/filecoin-project/specs/systems/filecoin_nodes/clock"
import addr "github.com/filecoin-project/specs/systems/filecoin_vm/actor/address"
import msg "github.com/filecoin-project/specs/systems/filecoin_vm/message"

type BlockCID ipld.CID
type MessageRoot ipld.CID
type ReceiptRoot ipld.CID
type ChainWeight UVarint
type ChainEpoch UVarint

// Randomness is a string of random bytes
type Randomness Bytes

type BlockHeader struct {
    // Chain linking
    Parents          Tipset
    Weight           ChainWeight
    Epoch            ChainEpoch

    // Miner Info
    MinerAddress     addr.Address

    // State
    StateTree        st.StateTree
    Messages         MessageRoot
    MessageReceipts  ReceiptRoot

    // Consensus things
    Timestamp        clock.UnixTime
    Ticket
    ElectionProof

    // Signatures
    BlockSig         filcrypto.Signature
    BLSAggregateSig  filcrypto.Signature

    //	SerializeSigned()            []byte
    //	ComputeUnsignedFingerprint() []
}

type Block struct {
    Header    BlockHeader
    Messages  [msg.Message]
}

type Chain struct {
    HeadEpoch()         ChainEpoch
    HeadTipset()        Tipset
    LatestCheckpoint()  ChainEpoch

    TipsetAtEpoch(epoch ChainEpoch) Tipset
    RandomnessAtEpoch(epoch ChainEpoch) Bytes
}

// Checkpoint represents a particular block to use as a trust anchor
// in Consensus and ChainSync
//
// Note: a Block uniquely identifies a tipset (the parents)
// from here, we may consider many tipsets that _include_ Block
// but we must indeed include t and not consider tipsets that
// fork from Block.Parents, but do not include Block.
type Checkpoint BlockCID

// SoftCheckpoint is a checkpoint that Filecoin nodes may use as they
// gain confidence in the blockchain. It is a unilateral checkpoint,
// and derived algorithmically from notions of probabilistic consensus
// and finality.
type SoftCheckpoint Checkpoint

// TrustedCheckpoint is a Checkpoint that is trusted by the broader
// Filecoin Network. These TrustedCheckpoints are arrived at through
// the higher level economic consensus that surrounds Filecoin.
// TrustedCheckpoints:
// - MUST be at least 200,000 blocks old (>1mo)
// - MUST be at least
// - MUST be widely known and accepted
// - MAY ship with Filecoin software implementations
// - MAY be propagated through other side-channel systems
// For more, see the Checkpoints section.
// TODO: consider renaming as EconomicCheckpoint
type TrustedCheckpoint Checkpoint