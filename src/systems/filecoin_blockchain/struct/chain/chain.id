import abi "github.com/filecoin-project/specs-actors/actors/abi"
import block "github.com/filecoin-project/specs/systems/filecoin_blockchain/struct/block"

type Chain struct {
    HeadTipset Tipset

    TipsetAtEpoch(epoch abi.ChainEpoch) Tipset
    RandomnessAtEpoch(epoch abi.ChainEpoch) abi.RandomnessSeed

    // call by StorageMiningSubsystem during block production
    GetTicketProductionRandSeed(epoch abi.ChainEpoch) abi.RandomnessSeed

    // call by StorageMiningSubsystem in sealing sector
    GetSealRandSeed(epoch abi.ChainEpoch) abi.RandomnessSeed

    // call by StorageMiningSubsystem after sealing
    GetPoStChallengeRandSeed(epoch abi.ChainEpoch) abi.RandomnessSeed
}

// Checkpoint represents a particular block to use as a trust anchor
// in Consensus and ChainSync
//
// Note: a Block uniquely identifies a tipset (the parents)
// from here, we may consider many tipsets that _include_ Block
// but we must indeed include t and not consider tipsets that
// fork from Block.Parents, but do not include Block.
type Checkpoint &block.BlockHeader

// SoftCheckpoint is a checkpoint that Filecoin nodes may use as they
// gain confidence in the blockchain. It is a unilateral checkpoint,
// and derived algorithmically from notions of probabilistic consensus
// and finality.
type SoftCheckpoint Checkpoint

// TrustedCheckpoint is a Checkpoint that is trusted by the broader
// Filecoin Network. These TrustedCheckpoints are arrived at through
// the higher level economic consensus that surrounds Filecoin.
// TrustedCheckpoints:
// - MUST be at least 200,000 blocks old (>1mo)
// - MUST be at least
// - MUST be widely known and accepted
// - MAY ship with Filecoin software implementations
// - MAY be propagated through other side-channel systems
// For more, see the Checkpoints section.
// TODO: consider renaming as EconomicCheckpoint
type TrustedCheckpoint Checkpoint
