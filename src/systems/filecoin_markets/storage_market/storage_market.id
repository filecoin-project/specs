import actors "github.com/filecoin-project/specs/actors"
import addr "github.com/filecoin-project/specs/systems/filecoin_vm/actor/address"
import block "github.com/filecoin-project/specs/systems/filecoin_blockchain/struct/block"
import deal "github.com/filecoin-project/specs/systems/filecoin_markets/storage_market/storage_deal"
import filcrypto "github.com/filecoin-project/specs/algorithms/crypto"
import ipld "github.com/filecoin-project/specs/libraries/ipld"
import message "github.com/filecoin-project/specs/systems/filecoin_vm/message"
import piece "github.com/filecoin-project/specs/systems/filecoin_files/piece"

type StorageDealStatus uint64

// StorageAsk is the current price and parameters a miner is currently offering for storage
// (analogous to an Ask in a financial market)
type StorageAsk struct {
    Price             actors.TokenAmount  // attoFIL per GiB per epoch
    Collateral        actors.TokenAmount  // attoFIL per GiB per epoch

    MinPieceSize      piece.PieceSize
    // address of miner actor for deals
    Miner             addr.Address
    // the epoch at the time this ask was published
    PublicationEpoch  block.ChainEpoch
    MaxDuration       block.ChainEpoch
    MinDuration       block.ChainEpoch
    // a miner should update sequence number each time it publishes an ask
    // so that anyone with two asks from the same miner can determine which is
    // more current
    SeqNo             UVarint
}

// A SignedStorageAsk is an ask signed by the miner that is making the offer
type SignedStorageAsk struct {
    Ask        StorageAsk
    Signature  filcrypto.Signature
}

// AskProtocolRequest is a request sent over the storage ask protocol to a miner 
// to determine their current ask
type AskProtocolRequest struct {
    Miner addr.Address
}

// AskProtocolResponse is the response a miner sends over the ask protocol with
// a signed version of their most recent storage ask
type AskProtocolResponse struct {
    Ask SignedStorageAsk
}

// DealProtocolRequest is a request sent by a storage client to 
// a storage provider on the storage deal protocol to propose a storage deal
type DealProtocolRequest struct {
    // The deal being proposed
    DealProposal  deal.StorageDealProposal
    // root of the data to be transferred
    Payload       ipld.CID
}

// DealProtocolResponse is a response sent by a storage miner 
// on the storage deal protocol with the current status of a storage
// deal proposal
type DealProtocolResponse struct {
    // The CID of the storage deal proposal 
    Proposal        &deal.StorageDealProposal

    // Status of deal
    State           StorageDealStatus
    // any additional information about status
    Message         string

    // CID of message published on chain, once it is published
    PublishMessage  &message.SignedMessage
}

type StorageDataTransferVoucher struct {
    Proposal &deal.StorageDealProposal
}
