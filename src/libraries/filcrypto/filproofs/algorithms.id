import file "github.com/filecoin-project/specs/systems/filecoin_files/file"
import sector "github.com/filecoin-project/specs/systems/filecoin_mining/sector"

type WinStackedDRGLayers UInt
type WinStackedDRGNodeSize UInt
type WinStackedDRGNodes UInt
type WinStackedDRGWindowCount UInt
type WinStackedDRGPartitions UInt
type WinStackedDRGChallenges UInt
type WinStackedDRGWindowChallenges UInt
type DRGDepth struct {}
type DRGFraction struct {}
type DRGDegree UInt
type DRGSeed struct {}
type DRGNodeCount UInt
type ExpanderGraphNodeCount UInt
type ChungExpanderPermutationFeistelKeys [UInt]
type ChungExpanderPermutationFeistelRounds UInt
type ChungExpanderPermutationFeistelHashFunction enum {
    Blake2S
    SHA256
}
type ChungExpanderAlpha struct {}
type ChungExpanderBeta struct {}
type ExpanderGraphDegree UInt
type ExpanderGraphSeed struct {}
type DRGNodeSize UInt

type SealAlgorithmArtifacts struct {
    AlgorithmWideSetupArtifacts struct {
        // trusted setup output parameters go here
        // updates to public parameters go here
    }

    SealSetupArtifacts

    // ProveArtifacts or
    ChallengeArtifacts struct {
        // inputs into prove() go here
    }

    VerifyArtifacts struct {
        // inputs into verify() go here
    }
}

// per-sector setup artifacts go here
type SealSetupArtifacts struct {
    CommD              sector.Commitment
    CommR              sector.SealedSectorCID
    CommC              sector.Commitment
    CommQ              sector.Commitment
    CommRLast          sector.Commitment
    CommDTreePaths     [file.Path]
    CommCTreePath      file.Path
    CommQTreePath      file.Path
    CommRLastTreePath  file.Path
    Seeds              [sector.SealSeed]
    KeyLayers          [Bytes]
    QLayer             Bytes
    Replica            Bytes
}

type EllipticCurve struct {
    FieldModulus &util.BigInt
}

type WinStackedDRG struct {
    Layers                  WinStackedDRGLayers
    NodeSize                WinStackedDRGNodeSize
    Nodes                   WinStackedDRGNodes
    WindowCount             WinStackedDRGWindowCount
    Partitions              WinStackedDRGPartitions
    Challenges              WinStackedDRGChallenges
    WindowChallenges        WinStackedDRGWindowChallenges
    Algorithm               struct {}
    DRGCfg
    ExpanderGraphCfg
    WindowDRGCfg            DRGCfg
    WindowExpanderGraphCfg  ExpanderGraphCfg
    // invariant: DRGCfg.Nodes == ExpanderGraphCfg.Nodes
    Curve                   EllipticCurve
    Cfg                     SDRCfg
}

type SDRCfg struct {
    SealCfg          sector.SealCfg
    ElectionPoStCfg  sector.PoStCfg
    SurprisePoStCfg  sector.PoStCfg
}

type DRGCfg struct {
    Algorithm struct {
        Depth     DRGDepth  // D
        Fraction  DRGFraction  // E

        ParentsAlgorithm enum {
            DRSample
        }

        RNGAlgorithm enum {
            ChaCha20
        }
    }
    Degree DRGDegree
    Seed DRGSeed
    Nodes DRGNodeCount
}

type DRG struct {
    Config         DRGCfg
    Parents(UInt)  [UInt]
}

type ExpanderGraphCfg struct {
    Algorithm union {
        ChungExpanderAlgorithm
    }

    Degree  ExpanderGraphDegree
    Seed    ExpanderGraphSeed
    Nodes   ExpanderGraphNodeCount
}

type ExpanderGraph struct {
    Config         ExpanderGraphCfg
    Parents(UInt)  [UInt]
}

type ChungExpanderAlgorithm struct {
    Alpha  ChungExpanderAlpha
    Beta   ChungExpanderBeta
    PermutationAlgorithm union {
        Feistel
    }
    Parents(node UInt, ExpanderGraphDegree, nodes ExpanderGraphNodeCount) [UInt]
}

type Feistel struct {
    Keys          ChungExpanderPermutationFeistelKeys
    Rounds        ChungExpanderPermutationFeistelRounds
    HashFunction  ChungExpanderPermutationFeistelHashFunction
    Permute(size UInt, n UInt) UInt
}
