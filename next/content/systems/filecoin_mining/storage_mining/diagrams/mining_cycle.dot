digraph mining_cycle {
  compound=true;
  ranksep=0.2;
  edge [style=solid]


  subgraph cluster_local {
    label="Storage Miner\n(off chain)"

    ActiveL -> ChallengedL [style=invis]

    subgraph cluster_local_mining {
      label="Mining"
      style=filled
      color=lightblue

      ActiveL
      ChallengedL

      { // chain challenge
        edge [color=red, fontcolor=red]
        node [color=red, fontcolor=red, shape=none]
        ActiveL -> ChallengedL [label="Chain issues challenge\n(implicit)"]
      }

      { // messages
        edge [color=blue, fontcolor=blue]
        node [color=blue, fontcolor=blue, shape=none]
      }
    }
  }

  subgraph cluster_chain {
    label="Storage Miner Actor\n(on chain)"
    color=blue

    OwnerAccountC
    ActiveC
    // ChallengedC


    OwnerAccountC -> ActiveC [style=invis]
    // ActiveC -> ChallengedC [style=invis]

    { // cron
      edge [color=magenta, fontcolor=magenta]
      node [color=magenta, fontcolor=magenta, shape=none]
      // ActiveC -> ChallengedC [label="Chain issues challenge\n(implicit)"]
    }

    { // messages
      edge [color=blue, fontcolor=blue]
      node [color=blue, fontcolor=blue, shape=none]
      OwnerAccountC -> ActiveC [label="Create Miner\n(spa.CreateMiner)"]
    }
  }


  { // messages
    edge [color=blue, fontcolor=blue]
    node [color=blue, fontcolor=blue, shape=none]
    OwnerAccL -> ActiveC [label="Create Miner\n(spa.CreateMiner)", constraint=false]
    ActiveL -> ActiveC [label="Add Sectors\n(sm.CommitSector)", constraint=false]


    ProducePost [label="Produce & submit PoSt\n(sm.SubmitPost)"]
    ChallengedL -> ProducePost [arrowhead=none]
    // ChallengedC -> ProducePost [arrowhead=none]
    ProducePost -> ActiveL
    ProducePost -> ActiveC

  }

  ActiveC -> ActiveL [label="Miner Created"]

}
