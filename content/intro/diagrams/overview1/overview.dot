digraph Filecoin {
  compound=true;
  ranksep=0.01;

  subgraph cluster_blockchain_subgroup {
    color=lightcyan1
    style=filled

    subgraph cluster_blockchain {
      style=filled
      color=lightgrey
      label = "Blockchain"

      { // components
        node [shape=box]
        "Chain"
        "Block Producer"
        "Block Syncer"
      }

      "Chain" -> "Block Producer" [style=invis]
    }

    subgraph cluster_vm {
      style=filled
      color=lightgrey
      label = "Filecoin VM"

      { // components
        node [shape=box]
        "VM Interpreter"
        "Messages"
      }

      { // actors
        node [shape=doubleoctagon]
        "Init Actor" [label="Init\nActor"]
        "Account Actor" [label="Account\nActor"]
        "Cron Actor" [label="Cron\nActor"]
      }

      "Init Actor" -> "Account Actor" [style=invis]
      "VM Interpreter" -> "Messages" [style=invis]
    }

    subgraph cluster_messagepool {
      style=filled
      color=lightgrey
      label = "Message Pool"

      { // components
        node [shape=box]
        "Message Storage"
        "Message Syncer"
      }

      "Message Storage" -> "Message Syncer" [style=invis]
    }


    subgraph cluster_storagepowerconsensus {
      style=filled
      color=lightgrey
      label = "Storage Power Consensus"

      { // components
        node [shape=box]
        "Expected Consensus"
      }

      { // actors
        node [shape=doubleoctagon]
        "Storage Power Actor" [label="Storage\nPower\nActor"]
      }

      "Storage Power Actor" -> "Expected Consensus" [style=invis]
    }
  }


  subgraph cluster_markets {
    color=lavender
    style=filled

    subgraph cluster_storagemarket {
      style=filled
      color=lightgrey
      label = "Storage Market"

      { // components
        node [shape=box]
        "Storage Provider" [label="Storage\nProvider"]
        "Storage Client" [label="Storage\nClient"]
      }

      { // libp2p protocols
        node [shape=Msquare]
        "Storage Deal Protocol" [label="Storage\nDeal\nProtocol"]
      }

      { // actors
        node [shape=doubleoctagon]
        "Storage Market Actor" [label="Storage\nMarket\nActor"]
      }

      {
        edge [style=invis]
        "Storage Market Actor" -> "Storage Deal Protocol"
        "Storage Market Actor" -> "Storage Client"
        "Storage Market Actor" -> "Storage Provider"
      }
    }

    subgraph cluster_retrievalmarket {
      style=filled
      color=lightgrey
      label = "Retrieval Market"

      { // components
        node [shape=box]
        "Retrieval Provider" [label="Retrieval\nProvider"]
        "Retrieval Client" [label="Retrieval\nClient"]
      }

      { // libp2p protocols
        node [shape=Msquare]
        "Retrieval Deal Protocol" [label="Retrieval\nDeal\nProtocol"]
      }

    }
  }

  subgraph cluster_filesdata {
    color=lavender
    style=filled

    subgraph cluster_pieces {
      style=filled
      color=lightgrey
      label = "Data Transfers"

      { // components
        node [shape=box]
        "Data Transfers"
        "Data Transfers Scheduler"
      }
      // "Disks" [shape=cylinder, label="Data Storage System\n(Disks, etc)"]

      { // libp2p protocols
        node [shape=Msquare]
        "AuthSwap" [label="data\ntransfer\nprotocol\n(unnamed)"]
      }
    }

    subgraph cluster_datatransfers {
      style=filled
      color=lightgrey
      label = "Data Transfers"

      { // components
        node [shape=box]
        "Data Transfers"
        "Data Transfers Scheduler"
      }
      // "Disks" [shape=cylinder, label="Data Storage System\n(Disks, etc)"]

      { // libp2p protocols
        node [shape=Msquare]
        "AuthSwap" [label="data\ntransfer\nprotocol\n(unnamed)"]
      }
    }


    subgraph cluster_files {
      style=filled
      color=lightgrey
      label = "Local File Storage"

      { // components
        node [shape=box]
        "FileStore"
        "PieceStore"
      }

      "Disk2" [shape=cylinder, label="Data Storage System\n(Disks, etc)"]

      PieceStore -> FileStore -> Disk2
    }

  }

  subgraph cluster_storageminerprocess {
    color=lightblue1
    style=filled

    subgraph cluster_storagemining {
      style=filled
      color=lightgrey
      label = "Storage Mining"

      { // components
        node [shape=box]
        "Mining Scheduler"
      }

      { // actors
        node [shape=doubleoctagon]
        "Storage Miner Actor" [label="Storage\nMiner\nActor"]
      }
    }

    subgraph cluster_sectorindexer {
      style=filled
      color=lightgrey
      label = "Sector Indexer"

      { // components
        node [shape=box]
        "Sector Store"
        "Sector Builder"
      }

      // "Sector Store"
      // "Sector Builder"
    }

    subgraph cluster_filproofs_subsystem {
      style=filled
      color=lightgrey
      label = "Storage Proving"

      { // components
        node [shape=box]
        "Seal Prover"
        "PoSt Generator"
        "Pledge Prover"
      }
    }

  }


  subgraph cluster_systems {
    // color=lavender
    // style=filled

    subgraph cluster_repository {
      style=filled
      color=lightgrey
      label = "Repository"

      { // components
        node [shape=box]
        "Config"
        "KeyStore"
        "IPLD DagStore"
      }
      "Local Storage" [shape=cylinder,label="Local Storage\n(Disk)"]

      "IPLD DagStore" -> "Local Storage"
      "Config" -> "Local Storage"
      "KeyStore" -> "Local Storage"
    }

    subgraph cluster_filproofs_lib {
      style=filled
      color=lightgrey
      label = "Filecoin Proofs"

      { // components
        node [shape=box]
        "Stacked-DRG-Porep"
        "Rational PoSt"
        "Piece Inclusion Proofs" [label="Piece\nInclusion\nProofs"]
        "VRFs"
        "VDFs"
      }

      "Stacked-DRG-Porep" -> "Rational PoSt" [style=invis]
      VRFs -> VDFs [style=invis]
    }

    subgraph cluster_payments {
      style=filled
      color=lightgrey
      label = "Payments"

      { // components
        node [shape=box]
        "Wallet"
      }

      { // actors
        node [shape=doubleoctagon]
        "Payment Channel Actor" [label="Payment\nChannel\nActor"]
      }
    }

    "VDFs" -> "Cron Actor" [style=invis]
  }



  subgraph cluster_net {
    color=lightcyan1
    style=filled

    subgraph cluster_clock {
      style=filled
      color=lightgrey
      label = "Clock"

      { // components
        node [shape=box]
        "Wall Clock"
        "NTP"
      }

      { // libp2p protocols
        node [shape=Msquare]
        "NTP"
      }
      "Wall Clock" -> "NTP"
    }


    subgraph cluster_network {
      style=filled
      color=lightgrey
      label = "Network Interface"

      { // components
        node [shape=box]
        "Filecoin Network Node"
      }

      { // libp2p protocols
        node [shape=Msquare]
      }
    }

    subgraph cluster_ipfs {
      style=filled
      color=lightgrey
      label = "IPFS"

      { // libp2p protocols
        node [shape=Msquare]
        "Graphsync"
        "Bitswap"
      }
    }

    subgraph cluster_libp2p {
      style=filled
      color=lightgrey
      label = "libp2p"

      { // components
        node [shape=box]
        "p2p.Node"
        "Switch"
        "Conn"
        // "TLS"
        // "QUIC"
        // "yamux"
        // "mplex"
      }

      { // libp2p protocols
        node [shape=Msquare]
        "Identify"
        "Gossipsub"
        "Bootstrap List" [label="Bootstrap\nList"]
      }

      "Identify" -> "p2p.Node"
      "Gossipsub" -> "p2p.Node"
      "Graphsync" -> "p2p.Node"
      "Bitswap" -> "p2p.Node"
      "Bootstrap List" -> "p2p.Node"

      "p2p.Node" -> "Switch"
      "Switch" -> "Conn"
      // "Conn" -> "QUIC"
      // "Conn" -> "yamux" -> "TLS"
      // "Conn" -> "mplex" -> "TLS"
    }
  }

  "Message Syncer" -> "Filecoin Network Node" [style=invis]
  "Filecoin Network Node" -> "Gossipsub" [style=invis]

  // cross module links
  {
    edge [minlen=3]
    "Chain" -> "VM Interpreter" [ltail=cluster_blockchain, lhead=cluster_vm]
    // "Message Pool" -> "Messages" [ltail=cluster_messagepool]
    // "Chain" -> "Expected Consensus" [ltail=cluster_blockchain, lhead=cluster_storagepowerconsensus]
    "Pledge Prover" -> "Storage Power Actor" [ltail=cluster_filproofs_subsystem, lhead=cluster_storagepowerconsensus]
    "Storage Provider" -> "Chain" [ltail=cluster_storagemarket, lhead=cluster_blockchain]
    "Retrieval Provider" -> "Chain" [ltail=cluster_retrievalmarket, lhead=cluster_blockchain]
    "Mining Scheduler" -> "Pledge Prover" [ltail=cluster_storagemining, lhead=cluster_filproofs_subsystem]
    "Mining Scheduler" -> "Sector Builder" [ltail=cluster_storagemining, lhead=cluster_sectorindexer]
    "PoSt Generator" -> "Chain" [ltail=cluster_filproofs_subsystem, lhead=cluster_blockchain]
    "Chain" -> "IPLD DagStore" [ltail=cluster_blockchain, lhead=cluster_repository]
    "AuthSwap" -> "Graphsync" [ltail=cluster_datatransfers]
    "Storage Provider" -> "Data Transfers" [ltail=cluster_storagemarket, lhead=cluster_datatransfers]
    "Retrieval Provider" -> "Data Transfers" [ltail=cluster_retrievalmarket, lhead=cluster_datatransfers]
    "Block Syncer" -> "Gossipsub" [ltail=cluster_blockchain, lhead=cluster_libp2p]
    "Message Syncer" -> "Gossipsub" [ltail=cluster_messagepool, lhead=cluster_libp2p]
    // "Message Storage" -> "IPLD DagStore" [ltail=cluster_blockchain, lhead=cluster_repository]
    "Switch" -> "KeyStore"
    "NTP" -> "Switch" [ltail=cluster_clock, lhead=cluster_libp2p]
    "Block Producer" -> "Message Storage" [lhead=cluster_messagepool]
    "Pledge Prover" -> "Stacked-DRG-Porep" [ltail=cluster_filproofs_subsystem, lhead=cluster_filproofs_lib]
    "Wallet" -> "KeyStore"
    "Data Transfers" -> "PieceStore"
    "Sector Store" -> "PieceStore"
    // "Block Producer" -> "PoSt Generator" [style=dashed]
  }
}
